linux_x64_task:
  container:
    image: gcc:10.3.0-buster

  env:
    PATH: /usr/local/bin:${PATH}

  install_script:
    - wget -O cmake.sh https://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.sh
    - sh cmake.sh --skip-license --exclude-subdir --prefix=/usr/local
    - apt-get update -qq
    - apt-get install -y libcapstone-dev
  script:
    - ./build.sh
  #test_script:
  #  - (cd build; ctest -V)

linux_android_armel_task:
  container:
    image: gcc:10.3.0-buster

  env:
    PATH: /usr/local/bin:/opt/android-ndk-r14b-android-9/bin:${PATH}

  submodules_script:
    - git submodule update --init --recursive

  android_ndk_script:
    - wget -O cmake.sh https://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.sh
    - sh cmake.sh --skip-license --exclude-subdir --prefix=/usr/local
    - apt-get update -qq
    - apt-get install -y libcapstone-dev
    - (cd /tmp; curl -LO https://dl.google.com/android/repository/android-ndk-r14b-linux-x86_64.zip)
    - (cd /opt; unzip -q /tmp/android-ndk-r14b-linux-x86_64.zip)
    - python /opt/android-ndk-r14b/build/tools/make_standalone_toolchain.py
        --arch arm
        --api 9
        --install-dir /opt/android-ndk-r14b-android-9
  
  build_capstone_script:
    - (
        mkdir staging;
        cd staging;
        git clone -b 4.0.2 https://github.com/aquynh/capstone.git;
      )
    - ./targets/android_build_capstone.sh /opt/android-ndk-r14b-android-9 ./staging/capstone

  script:
    - ./build.sh ./targets/arm-android.cmake
        -DEZ_LIBC=bionic
        -DEZ_LIBC_VARIANT=android-10
        -DENABLE_STATIC=OFF
        -DANDROID_ABI=armeabi-v7a
        -DCMAKE_SYSTEM_VERSION=9
        -DUSE_ARM_THUMB=ON
        -DCAPSTONE_PREFIX=$(readlink -f ./staging/capstone/out/usr)

linux_android_aarch64_task:
  container:
    image: gcc:10.3.0-buster

  env:
    PATH: /usr/local/bin:/opt/android-ndk-r14b-android-21-arm64/bin:${PATH}

  submodules_script:
    - git submodule update --init --recursive

  android_ndk_script:
    - wget -O cmake.sh https://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.sh
    - sh cmake.sh --skip-license --exclude-subdir --prefix=/usr/local
    - apt-get update -qq
    - apt-get install -y cmake libcapstone-dev
    - (cd /tmp; curl -LO https://dl.google.com/android/repository/android-ndk-r14b-linux-x86_64.zip)
    - (cd /opt; unzip -q /tmp/android-ndk-r14b-linux-x86_64.zip)
    - python /opt/android-ndk-r14b/build/tools/make_standalone_toolchain.py
        --arch arm64
        --api 21
        --install-dir /opt/android-ndk-r14b-android-21-arm64

  script:
    - ./build.sh ./targets/arm64-android.cmake
        -DEZ_LIBC=bionic
        -DEZ_LIBC_VARIANT=android-10
        -DENABLE_STATIC=OFF
        -DANDROID_ABI=arm64-v8a
        -DCMAKE_SYSTEM_VERSION=21

freebsd_x64_task:
  freebsd_instance:
    image_family: freebsd-12-2

  install_script: 
    - pkg update
    - pkg install -y bash cmake capstone pkgconf
  script:
    - ./build.sh
  test_script:
    - (cd build; ctest -V)

darwin_x64_task:
  macos_instance:
    image: big-sur-xcode-12.4

  install_script: brew install pkg-config cmake capstone
  script:
    - ./build.sh
  #test_script:
  #  - (cd build; ctest -V)

windows_x64_task:
  timeout_in: 90m
  windows_container:
    image: cirrusci/windowsservercore:2019
    os_version: 2019
  env:
    CIRRUS_SHELL: powershell
    MSYS: winsymlinks:nativestrict
    MSYSTEM: MINGW64
    MSYS2_URL: https://github.com/msys2/msys2-installer/releases/download/2021-11-30/msys2-base-x86_64-20211130.sfx.exe
    MSYS2_FINGERPRINT: 0
    MSYS2_PACKAGES: "
      diffutils git grep make pkgconf sed
      mingw-w64-x86_64-binutils
      mingw-w64-x86_64-gcc
      mingw-w64-x86_64-cmake
      mingw-w64-x86_64-pkgconf
      mingw-w64-x86_64-capstone
    "
    CHERE_INVOKING: 1
  msys2_cache:
    folder: C:\tools\archive
    reupload_on_changes: false
    # These env variables are used to generate fingerprint to trigger the cache procedure
    # If wanna to force re-populate msys2, increase MSYS2_FINGERPRINT
    fingerprint_script:
      - |
        echo $env:CIRRUS_TASK_NAME
        echo $env:MSYS2_URL
        echo $env:MSYS2_FINGERPRINT
        echo $env:MSYS2_PACKAGES
    populate_script:
      - |
        md -Force C:\tools\archive\pkg
        $start_time = Get-Date
        bitsadmin /transfer msys_download /dynamic /download /priority FOREGROUND $env:MSYS2_URL C:\tools\archive\base.exe
        Write-Output "Download time taken: $((Get-Date).Subtract($start_time))"
        cd C:\tools
        C:\tools\archive\base.exe -y
        del -Force C:\tools\archive\base.exe
        Write-Output "Base install time taken: $((Get-Date).Subtract($start_time))"
        $start_time = Get-Date
        ((Get-Content -path C:\tools\msys64\etc\\post-install\\07-pacman-key.post -Raw) -replace '--refresh-keys', '--version') | Set-Content -Path C:\tools\msys64\etc\\post-install\\07-pacman-key.post
        C:\tools\msys64\usr\bin\bash.exe -lc "sed -i 's/^CheckSpace/#CheckSpace/g' /etc/pacman.conf"
        C:\tools\msys64\usr\bin\bash.exe -lc "export"
        C:\tools\msys64\usr\bin\pacman.exe --noconfirm -Sy
        echo Y | C:\tools\msys64\usr\bin\pacman.exe --noconfirm -Suu --overwrite=*
        taskkill /F /FI "MODULES eq msys-2.0.dll"
        tasklist
        C:\tools\msys64\usr\bin\bash.exe -lc "mv -f /etc/pacman.conf.pacnew /etc/pacman.conf || true"
        C:\tools\msys64\usr\bin\bash.exe -lc "pacman --noconfirm -Syyuu --overwrite=*"
        Write-Output "Core install time taken: $((Get-Date).Subtract($start_time))"
        $start_time = Get-Date
        C:\tools\msys64\usr\bin\bash.exe -lc "pacman --noconfirm -S --needed $env:MSYS2_PACKAGES"
        Write-Output "Package install time taken: $((Get-Date).Subtract($start_time))"
        $start_time = Get-Date
        del -Force -ErrorAction SilentlyContinue C:\tools\msys64\etc\mtab
        del -Force -ErrorAction SilentlyContinue C:\tools\msys64\dev\fd
        del -Force -ErrorAction SilentlyContinue C:\tools\msys64\dev\stderr
        del -Force -ErrorAction SilentlyContinue C:\tools\msys64\dev\stdin
        del -Force -ErrorAction SilentlyContinue C:\tools\msys64\dev\stdout
        del -Force -Recurse -ErrorAction SilentlyContinue C:\tools\msys64\var\cache\pacman\pkg
        tar cf C:\tools\archive\msys64.tar -C C:\tools\ msys64
        Write-Output "Package archive time taken: $((Get-Date).Subtract($start_time))"
        del -Force -Recurse -ErrorAction SilentlyContinue c:\tools\msys64 
  install_script:
    - |
      $start_time = Get-Date
      cd C:\tools
      ls C:\tools\archive\msys64.tar
      tar xf C:\tools\archive\msys64.tar
      Write-Output "Extract msys2 time taken: $((Get-Date).Subtract($start_time))"
  script:
    - C:\tools\msys64\usr\bin\bash.exe -lc "mkdir build"
    - C:\tools\msys64\usr\bin\bash.exe -lc "cd build && cmake .. -G 'MSYS Makefiles'"
    - C:\tools\msys64\usr\bin\bash.exe -lc "cd build && cmake --build . -j $(nproc)"
    - exit $LastExitCode
  test_script:
    - C:\tools\msys64\usr\bin\bash.exe -lc "cd build && ctest -V"
